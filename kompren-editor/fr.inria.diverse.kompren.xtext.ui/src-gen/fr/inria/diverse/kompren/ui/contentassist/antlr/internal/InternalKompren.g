/*
* generated by Xtext
*/
grammar InternalKompren;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.inria.diverse.kompren.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.inria.diverse.kompren.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.inria.diverse.kompren.services.KomprenGrammarAccess;

}

@parser::members {
 
 	private KomprenGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(KomprenGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSlicer
entryRuleSlicer 
:
{ before(grammarAccess.getSlicerRule()); }
	 ruleSlicer
{ after(grammarAccess.getSlicerRule()); } 
	 EOF 
;

// Rule Slicer
ruleSlicer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSlicerAccess().getGroup()); }
(rule__Slicer__Group__0)
{ after(grammarAccess.getSlicerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleConstraint
entryRuleConstraint 
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintAccess().getGroup()); }
(rule__Constraint__Group__0)
{ after(grammarAccess.getConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRadius
entryRuleRadius 
:
{ before(grammarAccess.getRadiusRule()); }
	 ruleRadius
{ after(grammarAccess.getRadiusRule()); } 
	 EOF 
;

// Rule Radius
ruleRadius
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRadiusAccess().getGroup()); }
(rule__Radius__Group__0)
{ after(grammarAccess.getRadiusAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSlicedClass
entryRuleSlicedClass 
:
{ before(grammarAccess.getSlicedClassRule()); }
	 ruleSlicedClass
{ after(grammarAccess.getSlicedClassRule()); } 
	 EOF 
;

// Rule SlicedClass
ruleSlicedClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSlicedClassAccess().getGroup()); }
(rule__SlicedClass__Group__0)
{ after(grammarAccess.getSlicedClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDecl
entryRuleVarDecl 
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarDeclAccess().getVarNameAssignment()); }
(rule__VarDecl__VarNameAssignment)
{ after(grammarAccess.getVarDeclAccess().getVarNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSlicedProperty
entryRuleSlicedProperty 
:
{ before(grammarAccess.getSlicedPropertyRule()); }
	 ruleSlicedProperty
{ after(grammarAccess.getSlicedPropertyRule()); } 
	 EOF 
;

// Rule SlicedProperty
ruleSlicedProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSlicedPropertyAccess().getGroup()); }
(rule__SlicedProperty__Group__0)
{ after(grammarAccess.getSlicedPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOppositeCreation
entryRuleOppositeCreation 
:
{ before(grammarAccess.getOppositeCreationRule()); }
	 ruleOppositeCreation
{ after(grammarAccess.getOppositeCreationRule()); } 
	 EOF 
;

// Rule OppositeCreation
ruleOppositeCreation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOppositeCreationAccess().getGroup()); }
(rule__OppositeCreation__Group__0)
{ after(grammarAccess.getOppositeCreationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Slicer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__0__Impl
	rule__Slicer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getSlicerKeyword_0()); }

	'slicer' 

{ after(grammarAccess.getSlicerAccess().getSlicerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__1__Impl
	rule__Slicer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getActiveAssignment_1()); }
(rule__Slicer__ActiveAssignment_1)?
{ after(grammarAccess.getSlicerAccess().getActiveAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__2__Impl
	rule__Slicer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getStrictAssignment_2()); }
(rule__Slicer__StrictAssignment_2)?
{ after(grammarAccess.getSlicerAccess().getStrictAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__3__Impl
	rule__Slicer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getNameAssignment_3()); }
(rule__Slicer__NameAssignment_3)
{ after(grammarAccess.getSlicerAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__4__Impl
	rule__Slicer__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getSlicerAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__5__Impl
	rule__Slicer__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getDomainKeyword_5()); }

	'domain' 

{ after(grammarAccess.getSlicerAccess().getDomainKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__6__Impl
	rule__Slicer__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getColonKeyword_6()); }

	':' 

{ after(grammarAccess.getSlicerAccess().getColonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__7__Impl
	rule__Slicer__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getUriMetamodelAssignment_7()); }
(rule__Slicer__UriMetamodelAssignment_7)
{ after(grammarAccess.getSlicerAccess().getUriMetamodelAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__8__Impl
	rule__Slicer__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getInputKeyword_8()); }

	'input' 

{ after(grammarAccess.getSlicerAccess().getInputKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__9__Impl
	rule__Slicer__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getColonKeyword_9()); }

	':' 

{ after(grammarAccess.getSlicerAccess().getColonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__10__Impl
	rule__Slicer__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getInputClassesAssignment_10()); }
(rule__Slicer__InputClassesAssignment_10)
{ after(grammarAccess.getSlicerAccess().getInputClassesAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__11__Impl
	rule__Slicer__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getGroup_11()); }
(rule__Slicer__Group_11__0)*
{ after(grammarAccess.getSlicerAccess().getGroup_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__12__Impl
	rule__Slicer__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getGroup_12()); }
(rule__Slicer__Group_12__0)?
{ after(grammarAccess.getSlicerAccess().getGroup_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__13__Impl
	rule__Slicer__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getGroup_13()); }
(rule__Slicer__Group_13__0)*
{ after(grammarAccess.getSlicerAccess().getGroup_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__14__Impl
	rule__Slicer__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getGroup_14()); }
(rule__Slicer__Group_14__0)*
{ after(grammarAccess.getSlicerAccess().getGroup_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__15__Impl
	rule__Slicer__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getGroup_15()); }
(rule__Slicer__Group_15__0)*
{ after(grammarAccess.getSlicerAccess().getGroup_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__16__Impl
	rule__Slicer__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getGroup_16()); }
(rule__Slicer__Group_16__0)?
{ after(grammarAccess.getSlicerAccess().getGroup_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__17__Impl
	rule__Slicer__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getGroup_17()); }
(rule__Slicer__Group_17__0)?
{ after(grammarAccess.getSlicerAccess().getGroup_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__18
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__18__Impl
	rule__Slicer__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__18__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getGroup_18()); }
(rule__Slicer__Group_18__0)?
{ after(grammarAccess.getSlicerAccess().getGroup_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group__19
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group__19__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group__19__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getRightCurlyBracketKeyword_19()); }

	'}' 

{ after(grammarAccess.getSlicerAccess().getRightCurlyBracketKeyword_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}










































rule__Slicer__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_11__0__Impl
	rule__Slicer__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getCommaKeyword_11_0()); }

	',' 

{ after(grammarAccess.getSlicerAccess().getCommaKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getInputClassesAssignment_11_1()); }
(rule__Slicer__InputClassesAssignment_11_1)
{ after(grammarAccess.getSlicerAccess().getInputClassesAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Slicer__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_12__0__Impl
	rule__Slicer__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getRadiusKeyword_12_0()); }

	'radius' 

{ after(grammarAccess.getSlicerAccess().getRadiusKeyword_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_12__1__Impl
	rule__Slicer__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getColonKeyword_12_1()); }

	':' 

{ after(grammarAccess.getSlicerAccess().getColonKeyword_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getRadiusAssignment_12_2()); }
(rule__Slicer__RadiusAssignment_12_2)
{ after(grammarAccess.getSlicerAccess().getRadiusAssignment_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Slicer__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_13__0__Impl
	rule__Slicer__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getConstraintKeyword_13_0()); }

	'constraint' 

{ after(grammarAccess.getSlicerAccess().getConstraintKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_13__1__Impl
	rule__Slicer__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getColonKeyword_13_1()); }

	':' 

{ after(grammarAccess.getSlicerAccess().getColonKeyword_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_13__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_13__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getConstraintsAssignment_13_2()); }
(rule__Slicer__ConstraintsAssignment_13_2)
{ after(grammarAccess.getSlicerAccess().getConstraintsAssignment_13_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Slicer__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_14__0__Impl
	rule__Slicer__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getSlicedClassKeyword_14_0()); }

	'slicedClass' 

{ after(grammarAccess.getSlicerAccess().getSlicedClassKeyword_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_14__1__Impl
	rule__Slicer__Group_14__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getColonKeyword_14_1()); }

	':' 

{ after(grammarAccess.getSlicerAccess().getColonKeyword_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_14__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_14__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_14__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getSlicedElementsAssignment_14_2()); }
(rule__Slicer__SlicedElementsAssignment_14_2)
{ after(grammarAccess.getSlicerAccess().getSlicedElementsAssignment_14_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Slicer__Group_15__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_15__0__Impl
	rule__Slicer__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_15__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getSlicedPropertyKeyword_15_0()); }

	'slicedProperty' 

{ after(grammarAccess.getSlicerAccess().getSlicedPropertyKeyword_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_15__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_15__1__Impl
	rule__Slicer__Group_15__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_15__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getColonKeyword_15_1()); }

	':' 

{ after(grammarAccess.getSlicerAccess().getColonKeyword_15_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_15__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_15__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_15__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getSlicedElementsAssignment_15_2()); }
(rule__Slicer__SlicedElementsAssignment_15_2)
{ after(grammarAccess.getSlicerAccess().getSlicedElementsAssignment_15_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Slicer__Group_16__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_16__0__Impl
	rule__Slicer__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_16__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getOnStartKeyword_16_0()); }

	'onStart' 

{ after(grammarAccess.getSlicerAccess().getOnStartKeyword_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_16__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_16__1__Impl
	rule__Slicer__Group_16__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_16__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getLeftSquareBracketLeftSquareBracketKeyword_16_1()); }

	'[[' 

{ after(grammarAccess.getSlicerAccess().getLeftSquareBracketLeftSquareBracketKeyword_16_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_16__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_16__2__Impl
	rule__Slicer__Group_16__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_16__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getOnStartAssignment_16_2()); }
(rule__Slicer__OnStartAssignment_16_2)
{ after(grammarAccess.getSlicerAccess().getOnStartAssignment_16_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_16__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_16__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_16__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getRightSquareBracketRightSquareBracketKeyword_16_3()); }

	']]' 

{ after(grammarAccess.getSlicerAccess().getRightSquareBracketRightSquareBracketKeyword_16_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Slicer__Group_17__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_17__0__Impl
	rule__Slicer__Group_17__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_17__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getOnEndKeyword_17_0()); }

	'onEnd' 

{ after(grammarAccess.getSlicerAccess().getOnEndKeyword_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_17__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_17__1__Impl
	rule__Slicer__Group_17__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_17__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getLeftSquareBracketLeftSquareBracketKeyword_17_1()); }

	'[[' 

{ after(grammarAccess.getSlicerAccess().getLeftSquareBracketLeftSquareBracketKeyword_17_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_17__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_17__2__Impl
	rule__Slicer__Group_17__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_17__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getOnEndAssignment_17_2()); }
(rule__Slicer__OnEndAssignment_17_2)
{ after(grammarAccess.getSlicerAccess().getOnEndAssignment_17_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_17__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_17__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_17__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getRightSquareBracketRightSquareBracketKeyword_17_3()); }

	']]' 

{ after(grammarAccess.getSlicerAccess().getRightSquareBracketRightSquareBracketKeyword_17_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Slicer__Group_18__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_18__0__Impl
	rule__Slicer__Group_18__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_18__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getHelperKeyword_18_0()); }

	'helper' 

{ after(grammarAccess.getSlicerAccess().getHelperKeyword_18_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_18__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_18__1__Impl
	rule__Slicer__Group_18__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_18__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getLeftSquareBracketLeftSquareBracketKeyword_18_1()); }

	'[[' 

{ after(grammarAccess.getSlicerAccess().getLeftSquareBracketLeftSquareBracketKeyword_18_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_18__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_18__2__Impl
	rule__Slicer__Group_18__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_18__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getHelperAssignment_18_2()); }
(rule__Slicer__HelperAssignment_18_2)
{ after(grammarAccess.getSlicerAccess().getHelperAssignment_18_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slicer__Group_18__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slicer__Group_18__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__Group_18__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getRightSquareBracketRightSquareBracketKeyword_18_3()); }

	']]' 

{ after(grammarAccess.getSlicerAccess().getRightSquareBracketRightSquareBracketKeyword_18_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Constraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getNameAssignment_0()); }
(rule__Constraint__NameAssignment_0)
{ after(grammarAccess.getConstraintAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getLeftSquareBracketLeftSquareBracketKeyword_1()); }

	'[[' 

{ after(grammarAccess.getConstraintAccess().getLeftSquareBracketLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getExpressionAssignment_2()); }
(rule__Constraint__ExpressionAssignment_2)
{ after(grammarAccess.getConstraintAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRightSquareBracketRightSquareBracketKeyword_3()); }

	']]' 

{ after(grammarAccess.getConstraintAccess().getRightSquareBracketRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Radius__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Radius__Group__0__Impl
	rule__Radius__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRadiusAccess().getRadiusAction_0()); }
(

)
{ after(grammarAccess.getRadiusAccess().getRadiusAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Radius__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Radius__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRadiusAccess().getGroup_1()); }
(rule__Radius__Group_1__0)?
{ after(grammarAccess.getRadiusAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Radius__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Radius__Group_1__0__Impl
	rule__Radius__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRadiusAccess().getFocusedClassesAssignment_1_0()); }
(rule__Radius__FocusedClassesAssignment_1_0)
{ after(grammarAccess.getRadiusAccess().getFocusedClassesAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Radius__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Radius__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRadiusAccess().getGroup_1_1()); }
(rule__Radius__Group_1_1__0)*
{ after(grammarAccess.getRadiusAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Radius__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Radius__Group_1_1__0__Impl
	rule__Radius__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRadiusAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getRadiusAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Radius__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Radius__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRadiusAccess().getFocusedClassesAssignment_1_1_1()); }
(rule__Radius__FocusedClassesAssignment_1_1_1)
{ after(grammarAccess.getRadiusAccess().getFocusedClassesAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SlicedClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedClass__Group__0__Impl
	rule__SlicedClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedClassAccess().getDomainAssignment_0()); }
(rule__SlicedClass__DomainAssignment_0)
{ after(grammarAccess.getSlicedClassAccess().getDomainAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SlicedClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedClass__Group__1__Impl
	rule__SlicedClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedClassAccess().getIsOptionAssignment_1()); }
(rule__SlicedClass__IsOptionAssignment_1)?
{ after(grammarAccess.getSlicedClassAccess().getIsOptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SlicedClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedClass__Group__2__Impl
	rule__SlicedClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedClassAccess().getCtxAssignment_2()); }
(rule__SlicedClass__CtxAssignment_2)?
{ after(grammarAccess.getSlicedClassAccess().getCtxAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SlicedClass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedClass__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedClass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedClassAccess().getGroup_3()); }
(rule__SlicedClass__Group_3__0)?
{ after(grammarAccess.getSlicedClassAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SlicedClass__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedClass__Group_3__0__Impl
	rule__SlicedClass__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedClass__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedClassAccess().getLeftSquareBracketLeftSquareBracketKeyword_3_0()); }

	'[[' 

{ after(grammarAccess.getSlicedClassAccess().getLeftSquareBracketLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SlicedClass__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedClass__Group_3__1__Impl
	rule__SlicedClass__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedClass__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedClassAccess().getExpressionAssignment_3_1()); }
(rule__SlicedClass__ExpressionAssignment_3_1)
{ after(grammarAccess.getSlicedClassAccess().getExpressionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SlicedClass__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedClass__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedClass__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedClassAccess().getRightSquareBracketRightSquareBracketKeyword_3_2()); }

	']]' 

{ after(grammarAccess.getSlicedClassAccess().getRightSquareBracketRightSquareBracketKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SlicedProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedProperty__Group__0__Impl
	rule__SlicedProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getDomainAssignment_0()); }
(rule__SlicedProperty__DomainAssignment_0)
{ after(grammarAccess.getSlicedPropertyAccess().getDomainAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SlicedProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedProperty__Group__1__Impl
	rule__SlicedProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getIsOptionAssignment_1()); }
(rule__SlicedProperty__IsOptionAssignment_1)?
{ after(grammarAccess.getSlicedPropertyAccess().getIsOptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SlicedProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedProperty__Group__2__Impl
	rule__SlicedProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getSrcAssignment_2()); }
(rule__SlicedProperty__SrcAssignment_2)?
{ after(grammarAccess.getSlicedPropertyAccess().getSrcAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SlicedProperty__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedProperty__Group__3__Impl
	rule__SlicedProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getTgtAssignment_3()); }
(rule__SlicedProperty__TgtAssignment_3)?
{ after(grammarAccess.getSlicedPropertyAccess().getTgtAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SlicedProperty__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedProperty__Group__4__Impl
	rule__SlicedProperty__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getOppositeAssignment_4()); }
(rule__SlicedProperty__OppositeAssignment_4)?
{ after(grammarAccess.getSlicedPropertyAccess().getOppositeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SlicedProperty__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedProperty__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getGroup_5()); }
(rule__SlicedProperty__Group_5__0)?
{ after(grammarAccess.getSlicedPropertyAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SlicedProperty__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedProperty__Group_5__0__Impl
	rule__SlicedProperty__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getLeftSquareBracketLeftSquareBracketKeyword_5_0()); }

	'[[' 

{ after(grammarAccess.getSlicedPropertyAccess().getLeftSquareBracketLeftSquareBracketKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SlicedProperty__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedProperty__Group_5__1__Impl
	rule__SlicedProperty__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getExpressionAssignment_5_1()); }
(rule__SlicedProperty__ExpressionAssignment_5_1)
{ after(grammarAccess.getSlicedPropertyAccess().getExpressionAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SlicedProperty__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SlicedProperty__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getRightSquareBracketRightSquareBracketKeyword_5_2()); }

	']]' 

{ after(grammarAccess.getSlicedPropertyAccess().getRightSquareBracketRightSquareBracketKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OppositeCreation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OppositeCreation__Group__0__Impl
	rule__OppositeCreation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeCreation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOppositeCreationAccess().getOppositeCreationAction_0()); }
(

)
{ after(grammarAccess.getOppositeCreationAccess().getOppositeCreationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OppositeCreation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OppositeCreation__Group__1__Impl
	rule__OppositeCreation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeCreation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOppositeCreationAccess().getOppositeKeyword_1()); }

	'opposite' 

{ after(grammarAccess.getOppositeCreationAccess().getOppositeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OppositeCreation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OppositeCreation__Group__2__Impl
	rule__OppositeCreation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeCreation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOppositeCreationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getOppositeCreationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OppositeCreation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OppositeCreation__Group__3__Impl
	rule__OppositeCreation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeCreation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOppositeCreationAccess().getNameAssignment_3()); }
(rule__OppositeCreation__NameAssignment_3)
{ after(grammarAccess.getOppositeCreationAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OppositeCreation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OppositeCreation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeCreation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOppositeCreationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getOppositeCreationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Slicer__ActiveAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getActiveActiveKeyword_1_0()); }
(
{ before(grammarAccess.getSlicerAccess().getActiveActiveKeyword_1_0()); }

	'active' 

{ after(grammarAccess.getSlicerAccess().getActiveActiveKeyword_1_0()); }
)

{ after(grammarAccess.getSlicerAccess().getActiveActiveKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__StrictAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getStrictStrictKeyword_2_0()); }
(
{ before(grammarAccess.getSlicerAccess().getStrictStrictKeyword_2_0()); }

	'strict' 

{ after(grammarAccess.getSlicerAccess().getStrictStrictKeyword_2_0()); }
)

{ after(grammarAccess.getSlicerAccess().getStrictStrictKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getNameEStringParserRuleCall_3_0()); }
	ruleEString{ after(grammarAccess.getSlicerAccess().getNameEStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__UriMetamodelAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getUriMetamodelEStringParserRuleCall_7_0()); }
	ruleEString{ after(grammarAccess.getSlicerAccess().getUriMetamodelEStringParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__InputClassesAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getInputClassesEClassCrossReference_10_0()); }
(
{ before(grammarAccess.getSlicerAccess().getInputClassesEClassEStringParserRuleCall_10_0_1()); }
	ruleEString{ after(grammarAccess.getSlicerAccess().getInputClassesEClassEStringParserRuleCall_10_0_1()); }
)
{ after(grammarAccess.getSlicerAccess().getInputClassesEClassCrossReference_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__InputClassesAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getInputClassesEClassCrossReference_11_1_0()); }
(
{ before(grammarAccess.getSlicerAccess().getInputClassesEClassEStringParserRuleCall_11_1_0_1()); }
	ruleEString{ after(grammarAccess.getSlicerAccess().getInputClassesEClassEStringParserRuleCall_11_1_0_1()); }
)
{ after(grammarAccess.getSlicerAccess().getInputClassesEClassCrossReference_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__RadiusAssignment_12_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getRadiusRadiusParserRuleCall_12_2_0()); }
	ruleRadius{ after(grammarAccess.getSlicerAccess().getRadiusRadiusParserRuleCall_12_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__ConstraintsAssignment_13_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getConstraintsConstraintParserRuleCall_13_2_0()); }
	ruleConstraint{ after(grammarAccess.getSlicerAccess().getConstraintsConstraintParserRuleCall_13_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__SlicedElementsAssignment_14_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getSlicedElementsSlicedClassParserRuleCall_14_2_0()); }
	ruleSlicedClass{ after(grammarAccess.getSlicerAccess().getSlicedElementsSlicedClassParserRuleCall_14_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__SlicedElementsAssignment_15_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getSlicedElementsSlicedPropertyParserRuleCall_15_2_0()); }
	ruleSlicedProperty{ after(grammarAccess.getSlicerAccess().getSlicedElementsSlicedPropertyParserRuleCall_15_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__OnStartAssignment_16_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getOnStartEStringParserRuleCall_16_2_0()); }
	ruleEString{ after(grammarAccess.getSlicerAccess().getOnStartEStringParserRuleCall_16_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__OnEndAssignment_17_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getOnEndEStringParserRuleCall_17_2_0()); }
	ruleEString{ after(grammarAccess.getSlicerAccess().getOnEndEStringParserRuleCall_17_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slicer__HelperAssignment_18_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicerAccess().getHelperEStringParserRuleCall_18_2_0()); }
	ruleEString{ after(grammarAccess.getSlicerAccess().getHelperEStringParserRuleCall_18_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getNameEStringParserRuleCall_0_0()); }
	ruleEString{ after(grammarAccess.getConstraintAccess().getNameEStringParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getExpressionEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getConstraintAccess().getExpressionEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__FocusedClassesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRadiusAccess().getFocusedClassesSlicedClassCrossReference_1_0_0()); }
(
{ before(grammarAccess.getRadiusAccess().getFocusedClassesSlicedClassEStringParserRuleCall_1_0_0_1()); }
	ruleEString{ after(grammarAccess.getRadiusAccess().getFocusedClassesSlicedClassEStringParserRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getRadiusAccess().getFocusedClassesSlicedClassCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Radius__FocusedClassesAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRadiusAccess().getFocusedClassesSlicedClassCrossReference_1_1_1_0()); }
(
{ before(grammarAccess.getRadiusAccess().getFocusedClassesSlicedClassEStringParserRuleCall_1_1_1_0_1()); }
	ruleEString{ after(grammarAccess.getRadiusAccess().getFocusedClassesSlicedClassEStringParserRuleCall_1_1_1_0_1()); }
)
{ after(grammarAccess.getRadiusAccess().getFocusedClassesSlicedClassCrossReference_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedClass__DomainAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedClassAccess().getDomainEClassCrossReference_0_0()); }
(
{ before(grammarAccess.getSlicedClassAccess().getDomainEClassEStringParserRuleCall_0_0_1()); }
	ruleEString{ after(grammarAccess.getSlicedClassAccess().getDomainEClassEStringParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSlicedClassAccess().getDomainEClassCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedClass__IsOptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedClassAccess().getIsOptionOptionKeyword_1_0()); }
(
{ before(grammarAccess.getSlicedClassAccess().getIsOptionOptionKeyword_1_0()); }

	'option' 

{ after(grammarAccess.getSlicedClassAccess().getIsOptionOptionKeyword_1_0()); }
)

{ after(grammarAccess.getSlicedClassAccess().getIsOptionOptionKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedClass__CtxAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedClassAccess().getCtxVarDeclParserRuleCall_2_0()); }
	ruleVarDecl{ after(grammarAccess.getSlicedClassAccess().getCtxVarDeclParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedClass__ExpressionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedClassAccess().getExpressionEStringParserRuleCall_3_1_0()); }
	ruleEString{ after(grammarAccess.getSlicedClassAccess().getExpressionEStringParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__VarNameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getVarNameEStringParserRuleCall_0()); }
	ruleEString{ after(grammarAccess.getVarDeclAccess().getVarNameEStringParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__DomainAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getDomainEStructuralFeatureCrossReference_0_0()); }
(
{ before(grammarAccess.getSlicedPropertyAccess().getDomainEStructuralFeatureEStringParserRuleCall_0_0_1()); }
	ruleEString{ after(grammarAccess.getSlicedPropertyAccess().getDomainEStructuralFeatureEStringParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSlicedPropertyAccess().getDomainEStructuralFeatureCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__IsOptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getIsOptionOptionKeyword_1_0()); }
(
{ before(grammarAccess.getSlicedPropertyAccess().getIsOptionOptionKeyword_1_0()); }

	'option' 

{ after(grammarAccess.getSlicedPropertyAccess().getIsOptionOptionKeyword_1_0()); }
)

{ after(grammarAccess.getSlicedPropertyAccess().getIsOptionOptionKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__SrcAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getSrcVarDeclParserRuleCall_2_0()); }
	ruleVarDecl{ after(grammarAccess.getSlicedPropertyAccess().getSrcVarDeclParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__TgtAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getTgtVarDeclParserRuleCall_3_0()); }
	ruleVarDecl{ after(grammarAccess.getSlicedPropertyAccess().getTgtVarDeclParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__OppositeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getOppositeOppositeCreationParserRuleCall_4_0()); }
	ruleOppositeCreation{ after(grammarAccess.getSlicedPropertyAccess().getOppositeOppositeCreationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SlicedProperty__ExpressionAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicedPropertyAccess().getExpressionEStringParserRuleCall_5_1_0()); }
	ruleEString{ after(grammarAccess.getSlicedPropertyAccess().getExpressionEStringParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeCreation__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOppositeCreationAccess().getNameEStringParserRuleCall_3_0()); }
	ruleEString{ after(grammarAccess.getOppositeCreationAccess().getNameEStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


